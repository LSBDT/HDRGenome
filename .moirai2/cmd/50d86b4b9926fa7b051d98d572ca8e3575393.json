{"https://moirai2.github.io/schema/daemon/bash":["output=$tmpdir/vcftable.txt","logFile=$project/log/vcftable.txt","vcftable.pl -t $qvThreshold -o $output $indir/* 2> $logFile","echo \"INSERT root->$project/vcftable#log->$logFile\""],"https://moirai2.github.io/schema/daemon/input":["indir","project","qvThreshold"],"https://moirai2.github.io/schema/daemon/approximate/time":"1","https://moirai2.github.io/schema/daemon/output":"output","https://moirai2.github.io/schema/daemon/query/in":["root->project->$project","$project->project#indir->$indir","$project->vcftable#qvThreshold->$qvThreshold"],"https://moirai2.github.io/schema/daemon/query/out":"root->$project/vcftable->$output","https://moirai2.github.io/schema/daemon/dagdb":"db","https://moirai2.github.io/schema/daemon/script":{"https://moirai2.github.io/schema/daemon/script/code":["#!/usr/bin/perl","use strict 'vars';","use Cwd;","use File::Basename;","use File::Temp qw/tempfile tempdir/;","use FileHandle;","use Getopt::Std;","use IO::File;","use Time::localtime;","############################## HEADER ##############################","my ($program_name,$program_directory,$program_suffix)=fileparse($0);","$program_directory=Cwd::abs_path($program_directory);","my $program_path=\"$program_directory/$program_name\";","my $program_version=\"2024/06/13\";","############################## OPTIONS ##############################","use vars qw($opt_a $opt_c $opt_C $opt_h $opt_o $opt_q $opt_s $opt_S $opt_t);","getopts('a:c:C:ho:qs:S:t:');","############################## HELP ##############################","sub help{","\tprint \"\\n\";","\tprint \"Command: $program_name [option] VCF [VCF2 ..]\\n\";","\tprint \"Arguments:\\n\";","\tprint \"   VCF  variant call format (VCF or GVCF or avinput) files or under directories\\n\";","\tprint \"Options:\\n\";","\tprint \"    -a  Alpha Missense file to add new 1024 flag(default=none)\\n\";","\tprint \"    -c  Do coverage depth analysis with low/high thresholds (default=0.5,2.0)\\n\";","\tprint \"    -C  Write coverage depth to this file (default=none)\\n\";","\tprint \"    -h  Show help\\n\";","\tprint \"    -o  Output file (default='STDOUT')\\n\";","\tprint \"    -q  Quiet\\n\";","\tprint \"    -s  Do segmental duplication analysis with low/high thresholds (default=0.5,1.5)\\n\";","\tprint \"    -S  Write ref/alt ratio to this file (default=none)\\n\";","\tprint \"    -t  Quality value threshold for low quality (default<50)\\n\";","\tprint \"Flag:\\n\";","\tprint \"     0  wild\\n\";","\tprint \"     1  (het)erozygous\\n\";","\tprint \"     2  (hom)ozygous\\n\";","\tprint \"     4  deletion\\n\";","\tprint \"     8  insertion\\n\";","\tprint \"    16  multi allelic (column5.count(',')>0)\\n\";","\tprint \"    32  low quality (column6<QV50)\\n\";","\tprint \"    64  segmental deletion candidate (ALT/REF<1/threshold=0.5)\\n\";","\tprint \"   128  segmental duplication candidate (ALT/REF>=threshold=1.5)\\n\";","\tprint \"   256  low coverage candidate (DEPTH/AVG<=1/threshold=0.5)\\n\";","\tprint \"   512  high coverage candidate (DEPTH/AVG>=threshold=2.0)\\n\";","\tprint \"  1024  'likely pathogenic' from Deepmind AlphaMissense software\\n\";","\tprint \"\\n\";","\tprint \"Combinations:\\n\";","\tprint \"   1 = het(1)\\n\";","\tprint \"   2 = hom(2)\\n\";","\tprint \"   5 = het(1)+del(4)\\n\";","\tprint \"   6 = hom(2)+del(4)\\n\";","\tprint \"   9 = het(1)+ins(8)\\n\";","\tprint \"  10 = hom(2)+ins(8)\\n\";","\tprint \"  17 = het(1)+multi(16)\\n\";","\tprint \"  18 = hom(2)+multi(16)\\n\";","\tprint \"  21 = het(1)+del(4)+multi(16)\\n\";","\tprint \"  22 = hom(2)+del(4)+multi(16)\\n\";","\tprint \"  25 = het(1)+ins(8)+multi(16)\\n\";","\tprint \"  26 = hom(2)+ins(8)+multi(16)\\n\";","\tprint \"  33 = het(1)+lowQual(32)\\n\";","\tprint \"  34 = hom(2)+lowQual(32)\\n\";","\tprint \"  37 = het(1)+del(4)+lowQual(32)\\n\";","\tprint \"  38 = hom(2)+del(4)+lowQual(32)\\n\";","\tprint \"  41 = het(1)+ins(8)+lowQual(32)\\n\";","\tprint \"  42 = hom(2)+ins(8)+lowQual(32)\\n\";","\tprint \"  49 = het(1)+multi(16)+lowQual(32)\\n\";","\tprint \"  50 = hom(2)+multi(16)+lowQual(32)\\n\";","\tprint \"  53 = het(1)+del(4)+multi(16)+lowQual(32)\\n\";","\tprint \"  54 = hom(2)+del(4)+multi(16)+lowQual(32)\\n\";","\tprint \"  57 = het(1)+ins(8)+multi(16)+lowQual(32)\\n\";","\tprint \"  58 = hom(2)+ins(8)+multi(16)+lowQual(32)\\n\";","\tprint \"  65 = het(1)+segDel(64)\\n\";","\tprint \"  66 = hom(2)+segDel(64)\\n\";","\tprint \"  69 = het(1)+del(4)+segDel(64)\\n\";","\tprint \"  70 = hom(2)+del(4)+segDel(64)\\n\";","\tprint \"  73 = het(1)+ins(8)+segDel(64)\\n\";","\tprint \"  74 = hom(2)+ins(8)+segDel(64)\\n\";","\tprint \"  81 = het(1)+multi(16)+segDel(64)\\n\";","\tprint \"  82 = hom(2)+multi(16)+segDel(64)\\n\";","\tprint \"  85 = het(1)+del(4)+multi(16)+segDel(64)\\n\";","\tprint \"  86 = hom(2)+del(4)+multi(16)+segDel(64)\\n\";","\tprint \"  89 = het(1)+ins(8)+multi(16)+segDel(64)\\n\";","\tprint \"  90 = hom(2)+ins(8)+multi(16)+segDel(64)\\n\";","\tprint \"  97 = het(1)+lowQual(32)+segDel(64)\\n\";","\tprint \"  98 = hom(2)+lowQual(32)+segDel(64)\\n\";","\tprint \" 101 = het(1)+del(4)+lowQual(32)+segDel(64)\\n\";","\tprint \" 102 = hom(2)+del(4)+lowQual(32)+segDel(64)\\n\";","\tprint \" 105 = het(1)+ins(8)+lowQual(32)+segDel(64)\\n\";","\tprint \" 106 = hom(2)+ins(8)+lowQual(32)+segDel(64)\\n\";","\tprint \" 113 = het(1)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 114 = hom(2)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 117 = het(1)+del(4)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 118 = hom(2)+del(4)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 121 = het(1)+ins(8)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 122 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDel(64)\\n\";","\tprint \" 129 = het(1)+segDup(128)\\n\";","\tprint \" 130 = hom(2)+segDup(128)\\n\";","\tprint \" 133 = het(1)+del(4)+segDup(128)\\n\";","\tprint \" 134 = hom(2)+del(4)+segDup(128)\\n\";","\tprint \" 137 = het(1)+ins(8)+segDup(128)\\n\";","\tprint \" 138 = hom(2)+ins(8)+segDup(128)\\n\";","\tprint \" 145 = het(1)+multi(16)+segDup(128)\\n\";","\tprint \" 146 = hom(2)+multi(16)+segDup(128)\\n\";","\tprint \" 149 = het(1)+del(4)+multi(16)+segDup(128)\\n\";","\tprint \" 150 = hom(2)+del(4)+multi(16)+segDup(128)\\n\";","\tprint \" 153 = het(1)+ins(8)+multi(16)+segDup(128)\\n\";","\tprint \" 154 = hom(2)+ins(8)+multi(16)+segDup(128)\\n\";","\tprint \" 161 = het(1)+lowQual(32)+segDup(128)\\n\";","\tprint \" 162 = hom(2)+lowQual(32)+segDup(128)\\n\";","\tprint \" 165 = het(1)+del(4)+lowQual(32)+segDup(128)\\n\";","\tprint \" 166 = hom(2)+del(4)+lowQual(32)+segDup(128)\\n\";","\tprint \" 169 = het(1)+ins(8)+lowQual(32)+segDup(128)\\n\";","\tprint \" 170 = hom(2)+ins(8)+lowQual(32)+segDup(128)\\n\";","\tprint \" 177 = het(1)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 178 = hom(2)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 181 = het(1)+del(4)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 182 = hom(2)+del(4)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 185 = het(1)+ins(8)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 186 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDup(128)\\n\";","\tprint \" 257 = het(1)+lowCov(256)\\n\";","\tprint \" 258 = hom(2)+lowCov(256)\\n\";","\tprint \" 261 = het(1)+del(4)+lowCov(256)\\n\";","\tprint \" 262 = hom(2)+del(4)+lowCov(256)\\n\";","\tprint \" 265 = het(1)+ins(8)+lowCov(256)\\n\";","\tprint \" 266 = hom(2)+ins(8)+lowCov(256)\\n\";","\tprint \" 273 = het(1)+multi(16)+lowCov(256)\\n\";","\tprint \" 274 = hom(2)+multi(16)+lowCov(256)\\n\";","\tprint \" 277 = het(1)+del(4)+multi(16)+lowCov(256)\\n\";","\tprint \" 278 = hom(2)+del(4)+multi(16)+lowCov(256)\\n\";","\tprint \" 281 = het(1)+ins(8)+multi(16)+lowCov(256)\\n\";","\tprint \" 282 = hom(2)+ins(8)+multi(16)+lowCov(256)\\n\";","\tprint \" 289 = het(1)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 290 = hom(2)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 293 = het(1)+del(4)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 294 = hom(2)+del(4)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 297 = het(1)+ins(8)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 298 = hom(2)+ins(8)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 305 = het(1)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 306 = hom(2)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 309 = het(1)+del(4)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 310 = hom(2)+del(4)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 313 = het(1)+ins(8)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 314 = hom(2)+ins(8)+multi(16)+lowQual(32)+lowCov(256)\\n\";","\tprint \" 321 = het(1)+segDel(64)+lowCov(256)\\n\";","\tprint \" 322 = hom(2)+segDel(64)+lowCov(256)\\n\";","\tprint \" 325 = het(1)+del(4)+segDel(64)+lowCov(256)\\n\";","\tprint \" 326 = hom(2)+del(4)+segDel(64)+lowCov(256)\\n\";","\tprint \" 329 = het(1)+ins(8)+segDel(64)+lowCov(256)\\n\";","\tprint \" 330 = hom(2)+ins(8)+segDel(64)+lowCov(256)\\n\";","\tprint \" 337 = het(1)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 338 = hom(2)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 341 = het(1)+del(4)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 342 = hom(2)+del(4)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 345 = het(1)+ins(8)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 346 = hom(2)+ins(8)+multi(16)+segDel(64)+lowCov(256)\\n\";","\tprint \" 353 = het(1)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 354 = hom(2)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 357 = het(1)+del(4)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 358 = hom(2)+del(4)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 361 = het(1)+ins(8)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 362 = hom(2)+ins(8)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 369 = het(1)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 370 = hom(2)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 373 = het(1)+del(4)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 374 = hom(2)+del(4)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 377 = het(1)+ins(8)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 378 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDel(64)+lowCov(256)\\n\";","\tprint \" 385 = het(1)+segDup(128)+lowCov(256)\\n\";","\tprint \" 386 = hom(2)+segDup(128)+lowCov(256)\\n\";","\tprint \" 389 = het(1)+del(4)+segDup(128)+lowCov(256)\\n\";","\tprint \" 390 = hom(2)+del(4)+segDup(128)+lowCov(256)\\n\";","\tprint \" 393 = het(1)+ins(8)+segDup(128)+lowCov(256)\\n\";","\tprint \" 394 = hom(2)+ins(8)+segDup(128)+lowCov(256)\\n\";","\tprint \" 401 = het(1)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 402 = hom(2)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 405 = het(1)+del(4)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 406 = hom(2)+del(4)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 409 = het(1)+ins(8)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 410 = hom(2)+ins(8)+multi(16)+segDup(128)+lowCov(256)\\n\";","\tprint \" 417 = het(1)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 418 = hom(2)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 421 = het(1)+del(4)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 422 = hom(2)+del(4)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 425 = het(1)+ins(8)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 426 = hom(2)+ins(8)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 433 = het(1)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 434 = hom(2)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 437 = het(1)+del(4)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 438 = hom(2)+del(4)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 441 = het(1)+ins(8)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 442 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDup(128)+lowCov(256)\\n\";","\tprint \" 513 = het(1)+highCov(512)\\n\";","\tprint \" 514 = hom(2)+highCov(512)\\n\";","\tprint \" 517 = het(1)+del(4)+highCov(512)\\n\";","\tprint \" 518 = hom(2)+del(4)+highCov(512)\\n\";","\tprint \" 521 = het(1)+ins(8)+highCov(512)\\n\";","\tprint \" 522 = hom(2)+ins(8)+highCov(512)\\n\";","\tprint \" 529 = het(1)+multi(16)+highCov(512)\\n\";","\tprint \" 530 = hom(2)+multi(16)+highCov(512)\\n\";","\tprint \" 533 = het(1)+del(4)+multi(16)+highCov(512)\\n\";","\tprint \" 534 = hom(2)+del(4)+multi(16)+highCov(512)\\n\";","\tprint \" 537 = het(1)+ins(8)+multi(16)+highCov(512)\\n\";","\tprint \" 538 = hom(2)+ins(8)+multi(16)+highCov(512)\\n\";","\tprint \" 545 = het(1)+lowQual(32)+highCov(512)\\n\";","\tprint \" 546 = hom(2)+lowQual(32)+highCov(512)\\n\";","\tprint \" 549 = het(1)+del(4)+lowQual(32)+highCov(512)\\n\";","\tprint \" 550 = hom(2)+del(4)+lowQual(32)+highCov(512)\\n\";","\tprint \" 553 = het(1)+ins(8)+lowQual(32)+highCov(512)\\n\";","\tprint \" 554 = hom(2)+ins(8)+lowQual(32)+highCov(512)\\n\";","\tprint \" 561 = het(1)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 562 = hom(2)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 565 = het(1)+del(4)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 566 = hom(2)+del(4)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 569 = het(1)+ins(8)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 570 = hom(2)+ins(8)+multi(16)+lowQual(32)+highCov(512)\\n\";","\tprint \" 577 = het(1)+segDel(64)+highCov(512)\\n\";","\tprint \" 578 = hom(2)+segDel(64)+highCov(512)\\n\";","\tprint \" 581 = het(1)+del(4)+segDel(64)+highCov(512)\\n\";","\tprint \" 582 = hom(2)+del(4)+segDel(64)+highCov(512)\\n\";","\tprint \" 585 = het(1)+ins(8)+segDel(64)+highCov(512)\\n\";","\tprint \" 586 = hom(2)+ins(8)+segDel(64)+highCov(512)\\n\";","\tprint \" 593 = het(1)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 594 = hom(2)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 597 = het(1)+del(4)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 598 = hom(2)+del(4)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 601 = het(1)+ins(8)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 602 = hom(2)+ins(8)+multi(16)+segDel(64)+highCov(512)\\n\";","\tprint \" 609 = het(1)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 610 = hom(2)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 613 = het(1)+del(4)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 614 = hom(2)+del(4)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 617 = het(1)+ins(8)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 618 = hom(2)+ins(8)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 625 = het(1)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 626 = hom(2)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 629 = het(1)+del(4)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 630 = hom(2)+del(4)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 633 = het(1)+ins(8)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 634 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDel(64)+highCov(512)\\n\";","\tprint \" 641 = het(1)+segDup(128)+highCov(512)\\n\";","\tprint \" 642 = hom(2)+segDup(128)+highCov(512)\\n\";","\tprint \" 645 = het(1)+del(4)+segDup(128)+highCov(512)\\n\";","\tprint \" 646 = hom(2)+del(4)+segDup(128)+highCov(512)\\n\";","\tprint \" 649 = het(1)+ins(8)+segDup(128)+highCov(512)\\n\";","\tprint \" 650 = hom(2)+ins(8)+segDup(128)+highCov(512)\\n\";","\tprint \" 657 = het(1)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 658 = hom(2)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 661 = het(1)+del(4)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 662 = hom(2)+del(4)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 665 = het(1)+ins(8)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 666 = hom(2)+ins(8)+multi(16)+segDup(128)+highCov(512)\\n\";","\tprint \" 673 = het(1)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 674 = hom(2)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 677 = het(1)+del(4)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 678 = hom(2)+del(4)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 681 = het(1)+ins(8)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 682 = hom(2)+ins(8)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 689 = het(1)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 690 = hom(2)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 693 = het(1)+del(4)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 694 = hom(2)+del(4)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 697 = het(1)+ins(8)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \" 698 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDup(128)+highCov(512)\\n\";","\tprint \"1025 = het(1)+pathogenic(1024)\\n\";","\tprint \"1026 = hom(2)+pathogenic(1024)\\n\";","\tprint \"1029 = het(1)+del(4)+pathogenic(1024)\\n\";","\tprint \"1030 = hom(2)+del(4)+pathogenic(1024)\\n\";","\tprint \"1033 = het(1)+ins(8)+pathogenic(1024)\\n\";","\tprint \"1034 = hom(2)+ins(8)+pathogenic(1024)\\n\";","\tprint \"1041 = het(1)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1042 = hom(2)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1045 = het(1)+del(4)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1046 = hom(2)+del(4)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1049 = het(1)+ins(8)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1050 = hom(2)+ins(8)+multi(16)+pathogenic(1024)\\n\";","\tprint \"1057 = het(1)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1058 = hom(2)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1061 = het(1)+del(4)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1062 = hom(2)+del(4)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1065 = het(1)+ins(8)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1066 = hom(2)+ins(8)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1073 = het(1)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1074 = hom(2)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1077 = het(1)+del(4)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1078 = hom(2)+del(4)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1081 = het(1)+ins(8)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1082 = hom(2)+ins(8)+multi(16)+lowQual(32)+pathogenic(1024)\\n\";","\tprint \"1089 = het(1)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1090 = hom(2)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1093 = het(1)+del(4)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1094 = hom(2)+del(4)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1097 = het(1)+ins(8)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1098 = hom(2)+ins(8)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1105 = het(1)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1106 = hom(2)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1109 = het(1)+del(4)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1110 = hom(2)+del(4)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1113 = het(1)+ins(8)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1114 = hom(2)+ins(8)+multi(16)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1121 = het(1)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1122 = hom(2)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1125 = het(1)+del(4)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1126 = hom(2)+del(4)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1129 = het(1)+ins(8)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1130 = hom(2)+ins(8)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1137 = het(1)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1138 = hom(2)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1141 = het(1)+del(4)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1142 = hom(2)+del(4)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1145 = het(1)+ins(8)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1146 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDel(64)+pathogenic(1024)\\n\";","\tprint \"1153 = het(1)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1154 = hom(2)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1157 = het(1)+del(4)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1158 = hom(2)+del(4)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1161 = het(1)+ins(8)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1162 = hom(2)+ins(8)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1169 = het(1)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1170 = hom(2)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1173 = het(1)+del(4)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1174 = hom(2)+del(4)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1177 = het(1)+ins(8)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1178 = hom(2)+ins(8)+multi(16)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1185 = het(1)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1186 = hom(2)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1189 = het(1)+del(4)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1190 = hom(2)+del(4)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1193 = het(1)+ins(8)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1194 = hom(2)+ins(8)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1201 = het(1)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1202 = hom(2)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1205 = het(1)+del(4)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1206 = hom(2)+del(4)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1209 = het(1)+ins(8)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"1210 = hom(2)+ins(8)+multi(16)+lowQual(32)+segDup(128)+pathogenic(1024)\\n\";","\tprint \"\\n\";","\tprint \"Condition of multi allelic:\\n\";","\tprint \"0/1 het\\n\";","\tprint \"1/1 hom\\n\";","\tprint \"0/2 het multi-allelic\\n\";","\tprint \"1/2 het multi-allelic\\n\";","\tprint \"2/2 hom multi-allelic\\n\";","\tprint \"x/y hom multi-allelic (y>1 is multi allelic) (y==x is hom)\\n\";","\tprint \"\\n\";","\tprint \"Note:\\n\";","\tprint \"    If you are using BCF files, please install bcftools\\n\";","\tprint \"    http://samtools.github.io/bcftools/bcftools.html\\n\";","\tprint \"\\n\";","\tprint \"File Suffix:\\n\";","\tprint \"      .vcf  VCF file\\n\";","\tprint \"    .g.vcf  GVCF file\\n\";","\tprint \"  .avinput  AVINPUT file\\n\";","\tprint \"\\n\";","\tprint \"Author: akira.hasegawa\\@riken.jp\\n\";","\tprint \"Update: $program_version\\n\";","\tprint \"\\n\";","\tprint \"Note:\\n\";","\tprint \"  If only one VCF file is specified, vcftable.pl assumes VCF file has multiple entries and parse\\n\";","\tprint \"  Either dup or cov can be calculated in heatmap mode\\n\";","\tprint \"\\n\";","}","############################## MAIN ##############################","if($ARGV[0]eq\"sortsubs\"){sortSubs();exit();}","elsif($ARGV[0]eq\"test\"){test();exit();}","elsif($ARGV[0]eq\"combinations\"){printCombinations();exit();}","elsif(defined($opt_h)||scalar(@ARGV)<1){help();exit(1);}","my $lowCovThreshold=0.5;","my $highCovThreshold=2.0;","my $alphaMissenses={};","if(defined($opt_a)){$alphaMissenses=handleAlphaMissense($opt_a);}","if(defined($opt_C)&&!defined($opt_c)){$opt_c=\"$lowCovThreshold,$highCovThreshold\";}","if(defined($opt_c)&&$opt_c=~/,/){","  my @array=split(/,/,$opt_c);","  $lowCovThreshold=$array[0];","  $highCovThreshold=$array[1];","}","my $lowSegThreshold=0.5;","my $highSegThreshold=1.5;","if(defined($opt_S)&&!defined($opt_s)){$opt_s=\"$lowSegThreshold,$highSegThreshold\";}","if(defined($opt_s)&&$opt_s=~/,/){","  my @array=split(/,/,$opt_s);","  $lowSegThreshold=$array[0];","  $highSegThreshold=$array[1];","}","my $threshold=defined($opt_t)?$opt_t:50;","my $tableFile=defined($opt_o)?$opt_o:'-';","my $tmpDir=(-e \"/tmp\")?\"/tmp\":\"tmp\";","mkdir($tmpDir);","my @vcfFiles=listFiles(\"\\\\.([vb]cf|avinput)\\$\",@ARGV);","my ($chromosomes,$basenames,$splitFiles,$covFiles,$refAltFiles)=parseInputs($tmpDir,$threshold,@vcfFiles);","createTable($tableFile,$splitFiles,$chromosomes,$basenames,$alphaMissenses);","if(defined($opt_C)){createTable($opt_C,$covFiles,$chromosomes,$basenames);}","if(defined($opt_S)){createTable($opt_S,$refAltFiles,$chromosomes,$basenames);}","foreach my $chr(keys(%{$splitFiles})){foreach my $splitFile(values(%{$splitFiles->{$chr}})){unlink($splitFile);}}","if($opt_a){foreach my $chr(keys(%{$alphaMissenses})){unlink($alphaMissenses->{$chr});}}","if($tmpDir ne \"/tmp\"){rmdir($tmpDir);}","############################## absolutePath ##############################","sub absolutePath{","\tmy $path=shift();","\tmy $directory=dirname($path);","\tmy $filename=basename($path);","\treturn Cwd::abs_path($directory).\"/$filename\";","}","############################## createFile ##############################","sub createFile{","\tmy @lines=@_;","\tmy $path=shift(@lines);","\tmkdirs(dirname($path));","\topen(OUT,\">$path\");","\tforeach my $line(@lines){print OUT \"$line\\n\";}","\tclose(OUT);","}","############################## createTable ##############################","sub createTable{","\tmy $tableFile=shift();","\tmy $splitFiles=shift();","\tmy $chromosomes=shift();","\tmy $basenames=shift();","\tmy $alphaMissenses=shift();","\tif(!defined($opt_q)){print STDERR \"#Writing: $tableFile\\n\";}","\tmy $writer=IO::File->new(\">$tableFile\");","\tmy @labels=();","\tprint $writer \"#chromosome\\tposition\\tref\\talt\\t\".join(\"\\t\",@{$basenames}).\"\\n\";","\tforeach my $chromosome(@{$chromosomes}){","\t\tmy $alphaMissenseReader;","\t\tif(exists($alphaMissenses->{$chromosome})){$alphaMissenseReader=openTable($alphaMissenses->{$chromosome});}","\t\tmy @readers=();","\t\tforeach my $basename(@{$basenames}){push(@readers,openTable($splitFiles->{$chromosome}->{$basename}));}","\t\tmy $count=0;","\t\twhile(nextTable($writer,$alphaMissenseReader,@readers)){$count++;}","\t\tif(!defined($opt_q)){print STDERR \"#$chromosome count:\\t$count\\n\";}","\t}","\tclose($writer);","}","############################## equals ##############################","sub equals{","\tmy $obj1=shift();","\tmy $obj2=shift();","\tmy $ref1=ref($obj1);","\tmy $ref2=ref($obj2);","\tif($ref1 ne $ref2){return;}","\tif($ref1 eq \"ARRAY\"){","\t\tmy $len1=scalar(@{$obj1});","\t\tmy $len2=scalar(@{$obj2});","\t\tif($len1!=$len2){return;}","\t\tfor(my $i=0;$i<$len1;$i++){if(!equals($obj1->[$i],$obj2->[$i])){return;}}","\t\treturn 1;","\t}elsif($ref1 eq \"HASH\"){","\t\tmy @keys1=keys(%{$obj1});","\t\tmy @keys2=keys(%{$obj2});","\t\tmy $len1=scalar(@keys1);","\t\tmy $len2=scalar(@keys2);","\t\tif($len1!=$len2){return;}","\t\tforeach my $key(@keys1){","\t\t\tif(!exists($obj2->{$key})){return;}","\t\t\tmy $val1=$obj1->{$key};","\t\t\tmy $val2=$obj2->{$key};","\t\t\tif(!equals($val1,$val2)){return;}","\t\t}","\t\treturn 1;","\t}","\tif($obj1 eq $obj2){return 1;}","}","############################## getAverageDepthOfVCF ##############################","sub getAverageDepthOfVCF{","\tmy $file=shift();","\tmy $reader=openFile($file);","\tmy $sums=[];","\tmy $count=0;","\twhile(<$reader>){","\t\t\tchomp;s/r//g;","\t\t\tif(/^#/){next;}","\t\t\tmy ($chr,$pos,$id,$ref,$alt,$qual,$filter,$info,$format,@nas)=split(/\\t/);","\t\t\tfor(my $i=0;$i<scalar(@nas);$i++){","\t\t\t\tmy $na=$nas[$i];","\t\t\t\tmy @formats=split(/:/,$format);","\t\t\t\tmy @ns=split(/:/,$na);","\t\t\t\tfor(my $j=0;$j<scalar(@formats);$j++){","\t\t\t\t\tmy $f=$formats[$j];","\t\t\t\t\tif($f eq \"COV\"){","\t\t\t\t\t\tmy $n=$ns[$j];","\t\t\t\t\t\tmy @array=split(/,/,$n);","\t\t\t\t\t\tmy $rc=$array[0];","\t\t\t\t\t\tmy $ac=$array[1];","\t\t\t\t\t\t$sums->[$i]+=$rc+$ac;","\t\t\t\t\t\t$count+=1;","\t\t\t\t\t}elsif($f eq \"AD\"){","\t\t\t\t\t\tmy $n=$ns[$j];","\t\t\t\t\t\tmy @array=split(/,/,$n);","\t\t\t\t\t\tmy $rc=$array[0];","\t\t\t\t\t\tmy $ac=$array[1];","\t\t\t\t\t\t$sums->[$i]+=$rc+$ac;","\t\t\t\t\t\t$count+=1;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\tif($count==0){last;}","\t\t\tif($count>=1000000){last;}","\t}","\tclose($reader);","\tif($count>0){","\t\tfor(my $i=0;$i<scalar(@{$sums});$i++){$sums->[$i]=$sums->[$i]/$count;}","\t\treturn $sums;","\t}else{","\t\tprint STDERR \"No depth information\\n\";exit(1);","\t}","}","############################## getDate ##############################","sub getDate{","\tmy $delim=shift();","\tmy $time=shift();","\tif(!defined($delim)){$delim=\"\";}","\tif(!defined($time)||$time eq \"\"){$time=localtime();}","\telse{$time=localtime($time);}","\tmy $year=$time->year+1900;","\tmy $month=$time->mon+1;","\tif($month<10){$month=\"0\".$month;}","\tmy $day=$time->mday;","\tif($day<10){$day=\"0\".$day;}","\treturn $year.$delim.$month.$delim.$day;","}","############################## handleAlphaMissense ##############################","sub handleAlphaMissense{","\tmy $file=shift();","\tmy $files={};","\tmy $currentChr;","\tmy $writer;","\tmy $reader=openFile($file);","\twhile(<$reader>){","\t\tchomp;","\t\tif(/^#/){next;}","\t\tmy ($chr,$pos,$ref,$alt,$type)=split(/\\t/);","\t\tif($currentChr\tne $chr){","\t\t\tmy ($fh,$tmpfile)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"alphaMissense.$chr.XXXXXX\",SUFFIX=>\".txt\");","\t\t\t$files->{$chr}=$tmpfile;","\t\t\t$writer=$fh;","\t\t\t$currentChr=$chr;","\t\t}","\t\tif($type ne \"likely_pathogenic\"){next;}","\t\tprint\t$writer \"$chr\\t$pos\\t$ref\\t$alt\\n\";","\t}","\tif(defined($writer)){close($writer);}","\tclose($reader);","\tforeach my $chr(keys(%{$files})){","\t\tmy $tmpfile=$files->{$chr};","\t\tmy ($fh,$tmpfile2)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"alphaMissense.$chr.sort.XXXXXX\",SUFFIX=>\".txt\");","\t\tclose($fh);","\t\tif(!defined($opt_q)){print STDERR \"#Sorting $chr alphaMissense file: $tmpfile2\\n\";}","\t\tsystem(\"sort -k1,1 -k2,2n -k3,3 -k4,4 $tmpfile>$tmpfile2\");","\t\t$files->{$chr}=$tmpfile2;","\t\tunlink($tmpfile);","\t}","\treturn $files;","}","############################## handleNextChromosomes ##############################","sub handleNextChromosomes{","\tmy $basename=shift();","\tmy $writers=shift();","\tmy $files=shift();","\tmy $preChr=shift();","\tmy $nextChr=shift();","\tif(exists($writers->{$preChr})){close($writers->{$preChr});}","\tif(exists($files->{$nextChr}->{$basename})){","\t\tmy $tmpfile=$files->{$nextChr}->{$basename};","\t\t$writers->{$nextChr}=IO::File->new(\">>$tmpfile\");","\t}else{","\t\tmy ($fh,$tmpfile)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"$basename.$nextChr.XXXXXX\",SUFFIX=>\".txt\");","\t\t$writers->{$nextChr}=$fh;","\t\tif(!exists($files->{$nextChr})){$files->{$nextChr}={};}","\t\t$files->{$nextChr}->{$basename}=$tmpfile;","\t}","}","############################## listFiles ##############################","sub listFiles{","\tmy @input_directories=@_;","\tmy $file_suffix=shift(@input_directories);","\tmy @input_files=();","\tforeach my $input_directory (@input_directories){","\t\t$input_directory=absolutePath($input_directory);","\t\tif(-f $input_directory){push(@input_files,$input_directory);next;}","\t\telsif(-l $input_directory){push(@input_files,$input_directory);next;}","\t\topendir(DIR,$input_directory);","\t\tforeach my $file(readdir(DIR)){","\t\t\tif($file eq \".\"){next;}","\t\t\tif($file eq \"..\") {next;}","\t\t\tif($file eq \"\"){next;}","\t\t\t$file=\"$input_directory/$file\";","\t\t\tif(-d $file){next;}","\t\t\telsif($file!~/$file_suffix$/){next;}","\t\t\tpush(@input_files,$file);","\t\t}","\t\tclosedir(DIR);","\t}","\treturn sort(@input_files);","}","############################## mkdirs ##############################","sub mkdirs{","\tmy @directories=@_;","\tforeach my $directory(@directories){","\t\tif(-d $directory){next;}","\t\tmy @tokens=split(/[\\/\\\\]/,$directory);","\t\tif(($tokens[0] eq \"\")&&(scalar(@tokens)>1)){","\t\t\tshift(@tokens);","\t\t\tmy $token=shift(@tokens);","\t\t\tunshift(@tokens,\"/$token\");","\t\t}","\t\tmy $string=\"\";","\t\tforeach my $token(@tokens){","\t\t\t$string.=(($string eq \"\")?\"\":\"/\").$token;","\t\t\tif(-d $string){next;}","\t\t\tif(!mkdir($string)){return 0;}","\t\t}","\t}","\treturn 1;","}","############################## nextLine ##############################","sub nextLine{","\tmy $reader=shift();","\tmy $in=$reader->[0];","\tmy $prev=$reader->[1];","\tif(eof($in)){","\t\tclose($in);","\t\t$reader->[0]=undef;","\t\t$reader->[1]=[];","\t}else{","\t\tmy $line=<$in>;","\t\tchomp($line);","\t\t$line=~s/\\r//g;","\t\tmy @tokens=split(/\\t/,$line);","\t\t$reader->[1]=\\@tokens;","\t}","}","############################## nextTable ##############################","sub nextTable{","\tmy @readers=@_;","\tmy $writer=shift(@readers);","\tmy $alphaMissenseReader=shift(@readers);","\tmy $currentChr;","\tmy $currentPos;","\tmy $currentRefAlt;","\tforeach my $reader(@readers){","\t\tif(!defined($reader->[0])){next;}","\t\tmy ($chr,$pos,$ref,$alt,$flag)=@{$reader->[1]};","\t\tmy $refAlt=\"$ref\\t$alt\";","\t\tmy $update=0;","\t\tif(!defined($currentChr)){$update=1;}","\t\telsif(($chr cmp $currentChr)<0){$update=1;}","\t\telsif(($chr cmp $currentChr)>0){$update=0;}","\t\telsif($pos<$currentPos){$update=1;}","\t\telsif($pos>$currentPos){$update=0;}","\t\telsif(($refAlt cmp $currentRefAlt)<0){$update=1;}","\t\tif($update==1){","\t\t\t$currentChr=$chr;","\t\t\t$currentPos=$pos;","\t\t\t$currentRefAlt=$refAlt;","\t\t}","\t}","\tif(!defined($currentChr)){return 0;}","\tmy $alphaFlag=0;","\tif(defined($alphaMissenseReader)&&defined($alphaMissenseReader->[0])){","\t\tmy ($chr,$pos,$ref,$alt)=@{$alphaMissenseReader->[1]};","\t\tmy $update=0;","\t\tmy $refAlt=\"$ref\\t$alt\";","\t\tif(($chr cmp $currentChr)<0){$update=1;}","\t\telsif(($chr cmp $currentChr)>0){$update=0;}","\t\telsif($pos<$currentPos){$update=1;}","\t\telsif($pos>$currentPos){$update=0;}","\t\telsif(($refAlt cmp $currentRefAlt)==0){$update=1;}","\t\tif($update==1){","\t\t\t$alphaFlag=1024;","\t\t\tnextLine($alphaMissenseReader);","\t\t}","\t}","\tmy $line=\"$currentChr\\t$currentPos\\t$currentRefAlt\";","\tmy $fileCount=1;","\tforeach my $reader(@readers){","\t\t$fileCount++;","\t\tif(!defined($reader->[0])){$line.=\"\\t0\";next;}","\t\tmy ($chr,$pos,$ref,$alt,$flag)=@{$reader->[1]};","\t\t$flag+=$alphaFlag;","\t\tmy $refAlt=\"$ref\\t$alt\";","\t\tif($chr ne $currentChr||$pos!=$currentPos||$refAlt ne $currentRefAlt){$line.=\"\\t0\";next;}","\t\t$line.=\"\\t$flag\";","\t\tnextLine($reader);","\t}","\tprint $writer \"$line\\n\";","\treturn 1;","}","############################## openFile ##############################","sub openFile{","\tmy $path=shift();","\tif($path=~/^(.+\\@.+)\\:(.+)$/){","\t\tif($path=~/\\.gz(ip)?$/){return IO::File->new(\"ssh $1 'gzip -cd $2'|\");}","\t\telsif($path=~/\\.bz(ip)?2$/){return IO::File->new(\"ssh $1 'bzip2 -cd $2'|\");}","\t\telsif($path=~/\\.bam$/){return IO::File->new(\"ssh $1 'samtools view $2'|\");}","\t\telse{return IO::File->new(\"ssh $1 'cat $2'|\");}","\t}else{","\t\tif($path=~/\\.gz(ip)?$/){return IO::File->new(\"gzip -cd $path|\");}","\t\telsif($path=~/\\.bz(ip)?2$/){return IO::File->new(\"bzip2 -cd $path|\");}","\t\telsif($path=~/\\.bam$/){return IO::File->new(\"samtools view $path|\");}","\t\telse{return IO::File->new($path);}","\t}","}","############################## openTable ##############################","sub openTable{","\tmy $file=shift();","\tmy $reader=IO::File->new($file);","\tmy $line=<$reader>;","\tchomp($line);","\t$line=~s/\\r//g;","\tmy @tokens=split(/\\t/,$line);","\treturn [$reader,\\@tokens];","}","############################## parseAVINPUT ##############################","sub parseAVINPUT{","\t\tmy $file=shift();","\t\tmy $basename=shift();","\t\tmy $threshold=shift();","\t\tmy $reader=shift();","\t\tmy $writers=shift();","\t\tmy $splitFiles=shift();","\t\tmy $previousChr;","\t\twhile(<$reader>){","\t\tif(/^#/){next;}#skip comment","\t\tchomp;s/\\r//g;","\t\tmy ($chr,$start,$end,$ref,$alt,$type,$score,$qual,$chr2,$start2,$id,$ref2,$alt2,$score2,$qual2,$info,$format,$na)=split(/\\t/);","\t\tif($chr!~/^chr/){$chr=\"chr$chr\";}#add chr","\t\telsif($chr=~/^CHR(.+)$/i){$chr=\"chr$1\";}#lowercase","\t\tif($chr eq \"chrMT\"){$chr=\"chrM\";}#handle mitochondria","\t\tmy ($a,$b)=split(/[:\\|\\/]/,$na);#example: 0/1,1/1,1/2","\t\tif($a eq \".\"){$a=0;}#./2 => 0/2","\t\tif($b eq \".\"){$b=0;}#1/. => 1/0, just in case","\t\tmy $flag=0;","\t\tif($a==0&&$b==0){next;}#wild","\t\telsif($a==$b&&$a>0){$flag=2;}#homo","\t\telse{$flag=1;}#het","\t\tif($alt eq \"-\"){$alt=\".\";}","\t\telsif($alt eq \"0\"){$alt=\"\";for(my $i=$start;$i<=$end;$i++){$alt.=\".\";}}","\t\tif($ref eq \"-\"){$ref=\".\";}","\t\telsif($ref eq \"0\"){$ref=\"\";for(my $i=$start;$i<=$end;$i++){$ref.=\".\";}}","\t\tmy $multiCount=$alt=~tr/,//;#A,B,C=>3, but haven't seen this happen","\t\tif($multiCount<$b){$multiCount=$b;}#1/2=>2, 3/3=>3, 3/4=>4","\t\tif($multiCount>1){$flag+=16;}#multi allelic","\t\tmy $c1=length($alt);# 'TTT'=>3","\t\tmy $c2=length($ref);# 'AA'=>2 '.'=>1","\t\tif($c1<$c2){$flag+=4;}#deletion","\t\telsif($c1>$c2){$flag+=8;}#insertion","\t\telsif($alt eq \".\" && $ref ne \".\"){$flag+=4;}","\t\telsif($ref eq \".\" && $alt ne \".\"){$flag+=8;}","\t\tif($qual eq \"PASS\"||$qual2 eq \"PASS\"){}","\t\telsif($qual=~/^\\d+$/){if($qual<$threshold){$flag+=32;}}","\t\tif(!defined($previousChr)||$previousChr ne $chr){#new chromosome","\t\t\tif(exists($writers->{$previousChr})){close($writers->{$previousChr});}#close","\t\t\tif(exists($splitFiles->{$chr}->{$basename})){#append to already existing file","\t\t\t\tmy $tmpfile=$splitFiles->{$chr}->{$basename};","\t\t\t\t$writers->{$chr}=IO::File->new(\">>$tmpfile\");","\t\t\t}else{#crete new temporary writer","\t\t\t\tmy ($fh,$tmpfile)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"$basename.$chr.XXXXXX\",SUFFIX=>\".txt\");","\t\t\t\t$writers->{$chr}=$fh;","\t\t\t\tif(!exists($splitFiles->{$chr})){$splitFiles->{$chr}={};}","\t\t\t\t$splitFiles->{$chr}->{$basename}=$tmpfile;","\t\t\t}","\t\t\t$previousChr=$chr;#update chromosome","\t\t}","\t\tmy $writer=$writers->{$chr};#current writer","\t\tprint $writer \"$chr\\t$start\\t$ref\\t$alt\\t$flag\\n\";#write","\t}","\tif(exists($writers->{$previousChr})){close($writers->{$previousChr});}#close last writer","\treturn $basename;","}","############################## parseGVCF ##############################","sub parseGVCF{","  my $file=shift();","  my $basename=shift();","  my $threshold=shift();","  my $reader=shift();","  my $writers=shift();","  my $splitFiles=shift();","  my $previousChr;","  while(<$reader>){","\t\t\tchomp;s/\\r//g;","\t\t\tif(/^#/){}","\t\t\t#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tPt2402_BL1811.Bt07","\t\t\tmy ($chr,$pos,$id,$ref,$alt,$qual,$filter,$info,$format,$na)=split(/\\t/);","\t\t\tif($chr!~/^chr/){$chr=\"chr$chr\";}","\t\t\telsif($chr=~/^CHR(.+)$/i){$chr=\"chr$1\";}","\t\t\tif($chr eq \"chrMT\"){$chr=\"chrM\";}","\t\t\tmy ($a,$b)=split(/[:\\|\\/]/,$na);","\t\t\tif($a eq \".\"){$a=0;}","\t\t\tif($b eq \".\"){$b=0;}","\t\t\tmy $flag=0;","\t\t\tif($a==0&&$b==0){next;}#wild","\t\t\telsif($a==$b&&$a>0){$flag=2;}#homo","\t\t\telse{$flag=1;}#het","\t\t\t$alt=~s/\\,?\\<NON_REF\\>//g;","\t\t\tmy $multiCount=$alt=~tr/,//;#A,B,C=>3, but haven't seen this happen","\t\t\tif($multiCount<$b){$multiCount=$b;}#1/2=>2, 3/3=>3, 3/4=>4","\t\t\tif($multiCount>1){$flag+=16;}#multi allelic","\t\t\tmy $c1=length($alt);","\t\t\tmy $c2=length($ref);# 'AA'=>2 '.'=>1","\t\t\tif($c1<$c2){$flag+=4;}","\t\t\telsif($c1>$c2){$flag+=8;}","\t\t\telsif($alt eq \".\" && $ref ne \".\"){$flag+=4;}","\t\t\telsif($ref eq \".\" && $alt ne \".\"){$flag+=8;}","\t\t\tif($qual eq \"PASS\"){}","\t\t\telsif($qual=~/^\\d+$/){if($qual<$threshold){$flag+=32;}}","\t\t\tif(!defined($previousChr)||$previousChr ne $chr){","\t\t\t\tif(exists($writers->{$previousChr})){close($writers->{$previousChr});}","\t\t\t\tif(exists($splitFiles->{$chr}->{$basename})){","\t\t\t\t\tmy $tmpfile=$splitFiles->{$chr}->{$basename};","\t\t\t\t\t$writers->{$chr}=IO::File->new(\">>$tmpfile\");","\t\t\t\t}else{","\t\t\t\t\tmy ($fh,$tmpfile)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"$basename.$chr.XXXXXX\",SUFFIX=>\".txt\");","\t\t\t\t\t$writers->{$chr}=$fh;","\t\t\t\t\tif(!exists($splitFiles->{$chr})){$splitFiles->{$chr}={};}","\t\t\t\t\t$splitFiles->{$chr}->{$basename}=$tmpfile;","\t\t\t\t}","\t\t\t}","\t\t\t$previousChr=$chr;","\t\t\tmy $writer=$writers->{$chr};","\t\t\tprint $writer \"$chr\\t$pos\\t$ref\\t$alt\\t$flag\\n\";","  }","  if(exists($writers->{$previousChr})){close($writers->{$previousChr});}","\t\treturn $basename;","}","############################## parseInputs ##############################","sub parseInputs{","  my @inFiles=@_;","  my $tmpDir=shift(@inFiles);","  my $threshold=shift(@inFiles);","  my @basenames=();","  my $splitFiles={};","  my $covFiles={};","  my $refAltFiles={};","  my $chrHash={};","  if(!defined($opt_q)){foreach my $inFile(@inFiles){print STDERR \"#Input file: $inFile\\n\";}}","  foreach my $inFile(@inFiles){","    my $reader;","    my $basename;","    if($inFile=~/^(.+)\\.g(ip)?z$/i){$basename=$1;$reader=IO::File->new(\"gzip -cd $inFile|\");}","    elsif($inFile=~/^(.+)\\.b(ip)?z2$/i){$basename=$1;$reader=IO::File->new(\"bzip2 -cd $inFile|\");}","    elsif($inFile=~/^(.+)\\.bcf$/i){$basename=$1;$reader=IO::File->new(\"bcftools view $inFile|\");}","    else{$basename=$inFile;$reader=IO::File->new($inFile);}","    my $type;","    if($basename=~/^(.+)\\.g\\.vcf$/i){$type=\"gvcf\";$basename=$1;}","    elsif($basename=~/^(.+)\\.vcf$/i){$type=\"vcf\";$basename=$1;}","    elsif($basename=~/^(.+)\\.bcf$/i){$type=\"vcf\";$basename=$1;}","    elsif($basename=~/^(.+)\\.avinput$/i){$type=\"avinput\";$basename=$1;}","    $basename=basename($basename);","    my $writers={};","    my $covWriters={};","    my $refAltWriters={};","\t\t\t\tmy @handledNames=();","    if($type eq \"vcf\"){@handledNames=parseVCF($inFile,$basename,$threshold,$reader,$writers,$splitFiles,$covWriters,$covFiles,$refAltWriters,$refAltFiles);}","    elsif($type eq \"gvcf\"){@handledNames=parseGVCF($inFile,$basename,$threshold,$reader,$writers,$splitFiles);}","    elsif($type eq \"avinput\"){@handledNames=parseAVINPUT($inFile,$basename,$threshold,$reader,$writers,$splitFiles);}","    close($reader);","\t\t\t\tpush(@basenames,@handledNames);","\t\t\t\tforeach my $handledName(@handledNames){","\t\t\t\t\tforeach my $chr(keys(%{$writers})){","\t\t\t\t\t\t$chrHash->{$chr}=1;","\t\t\t\t\t\tsortSplitFile($splitFiles,$chr,$handledName);","\t\t\t\t\t\tsortSplitFile($covFiles,$chr,$handledName);","\t\t\t\t\t\tsortSplitFile($refAltFiles,$chr,$handledName);","\t\t\t\t\t}","\t\t\t\t}","  }","  my @chromosomes=sort{$a cmp $b}keys(%{$chrHash});","  return (\\@chromosomes,\\@basenames,$splitFiles,$covFiles,$refAltFiles);","}","############################## parseVCF ##############################","sub parseVCF{","\tmy $file=shift();","\tmy $basename=shift();","\tmy $threshold=shift();","\tmy $reader=shift();","\tmy $writers=shift();","\tmy $splitFiles=shift();","\tmy $covWriters=shift();","\tmy $writer;","\tmy $covWriter;","\tmy $refAltWriter;","\tmy $covFiles=shift();","\tmy $refAltWriters=shift();","\tmy $refAltFiles=shift();","\tmy $previousChr;","\tmy @formats;","\tmy $averageDepth;","\tif(defined($opt_c)){","\t\t$averageDepth=getAverageDepthOfVCF($file);","\t\tif(!defined($opt_q)){","\t\t\tprint STDERR \"#Average depth of \".basename($file).\":\\t\".join(\",\",@{$averageDepth}).\"\\n\";","\t\t}","\t}","\tmy @basenames=();","\twhile(<$reader>){","\t\tif(/^##/){next;}","\t\tif(/^#/){","\t\t\tchomp;s/\\r//g;","\t\t\tmy @tokens=split(/\\t/);","\t\t\t@basenames=splice(@tokens,9);","\t\t\tlast;","\t\t}else{","\t\t\tclose($reader);","\t\t\t$reader=openFile($file);","\t\t\tlast;","\t\t}","\t}","\tif(scalar(@basenames)==0){push(@basenames,$basename);}","\twhile(<$reader>){","\t\tif(/^#/){next;}","\t\tchomp;s/\\r//g;","\t\t#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA18939","\t\tmy ($chr,$pos,$id,$ref,$alt,$qual,$filter,$info,$format,@nas)=split(/\\t/);","\t\tif($chr!~/^chr/){$chr=\"chr$chr\";}","\t\telsif($chr=~/^CHR(.+)$/i){$chr=\"chr$1\";}","\t\tif($chr eq \"chrMT\"){$chr=\"chrM\";}","\t\tmy @flags=();","\t\tmy @covs=();","\t\tmy @refAlts=();","\t\tmy $printFlag=0;","\t\tmy @formats=split(/:/,$format);","\t\tmy $multiCount=$alt=~tr/,//;#A,B,C=>3, but haven't seen this happen","\t\tmy $c1=length($alt);","\t\tmy $c2=length($ref);#'AA'=>2 '.'=>1","\t\tmy $index=0;","\t\tforeach my $na(@nas){","\t\t\tmy $basename=$basenames[$index];","\t\t\tmy @ns=split(/:/,$na);","\t\t\tmy $flag=0;","\t\t\tmy $covFlag=0;","\t\t\tmy $refAltFlag=0;","\t\t\tif($c1<$c2){$flag+=4;}","\t\t\telsif($c1>$c2){$flag+=8;}","\t\t\telsif($alt eq \".\" && $ref ne \".\"){$flag+=4;}","\t\t\telsif($ref eq \".\" && $alt ne \".\"){$flag+=8;}","\t\t\tif($qual eq \"PASS\"||$qual eq \".\"){}","\t\t\telsif($qual=~/^\\d+$/){if($qual<$threshold){$flag+=32;}}","\t\t\tfor(my $i=0;$i<scalar(@formats);$i++){","\t\t\t\tmy $f=$formats[$i];","\t\t\t\tmy $n=$ns[$i];","\t\t\t\tif($f eq \"GT\"){","\t\t\t\t\tmy ($a,$b)=split(/[\\|\\/]/,$n);","\t\t\t\t\tif($a eq \".\"){$a=0;}","\t\t\t\t\tif($b eq \".\"){$b=0;}","\t\t\t\t\tif($a==0&&$b==0){next;}#wild","\t\t\t\t\telsif($a==$b&&$a>0){$flag+=2;}#homo","\t\t\t\t\telse{$flag+=1;}#het","\t\t\t\t\tmy $count=$multiCount;","\t\t\t\t\tif($count<$b){$count=$b;}#1/2=>2, 3/3=>3, 3/4=>4","\t\t\t\t\tif($count>1){$flag+=16;}#multi allelic","\t\t\t\t}elsif($f eq \"COV\"||$f eq \"AD\"){","\t\t\t\t\tmy @array=split(/,/,$n);","\t\t\t\t\tmy $rc=$array[0];","\t\t\t\t\tmy $ac=$array[1];","\t\t\t\t\tif(defined($opt_s)){","\t\t\t\t\t\tmy $ratio=($rc>0)?$ac/$rc:1;","\t\t\t\t\t\tif($ratio<=$lowSegThreshold){$flag+=64;}","\t\t\t\t\t\telsif($ratio>=$highSegThreshold){$flag+=128;}","\t\t\t\t\t\tif(defined($opt_S)){$refAltFlag=int($ratio*1000+0.5)/1000;}","\t\t\t\t\t}","\t\t\t\t\tif(defined($opt_c)){","\t\t\t\t\t\t\tmy $ratio=($rc+$ac)/$averageDepth->[0];","\t\t\t\t\t\t\tif($ratio<=$lowCovThreshold){$flag+=256;}","\t\t\t\t\t\t\telsif($ratio>=$highCovThreshold){$flag+=512;}","\t\t\t\t\t\t\tif(defined($opt_C)){$covFlag=$rc+$ac;}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t\tif(!defined($previousChr)||$previousChr ne $chr){","\t\t\t\thandleNextChromosomes($basename,$writers,$splitFiles,$previousChr,$chr);","\t\t\t\tif(defined($opt_S)){handleNextChromosomes($basename,$refAltWriters,$refAltFiles,$previousChr,$chr);}","\t\t\t\tif(defined($opt_C)){handleNextChromosomes($basename,$covWriters,$covFiles,$previousChr,$chr);}","\t\t\t\t$previousChr=$chr;","\t\t\t}","\t\t\t$writer=$writers->{$chr};","\t\t\tprint $writer \"$chr\\t$pos\\t$ref\\t$alt\\t$flag\\n\";","\t\t\tif(defined($opt_C)){","\t\t\t\t\t$covWriter=$covWriters->{$chr};","\t\t\t\t\tprint $covWriter \"$chr\\t$pos\\t$ref\\t$alt\\t$covFlag\\n\";","\t\t\t}","\t\t\tif(defined($opt_S)){","\t\t\t\t\t$refAltWriter=$refAltWriters->{$chr};","\t\t\t\t\tprint $refAltWriter \"$chr\\t$pos\\t$ref\\t$alt\\t$refAltFlag\\n\";","\t\t\t}","\t\t\t$index++;","\t\t}","\t}","\tclose($reader);","\tclose($writer);","\tif(defined($covWriter)){close($covWriter);}","\tif(defined($refAltWriter)){close($refAltWriter);}","\treturn @basenames;","}","############################## printCombinations ##############################","sub printCombinations{","  print \"print \\\"Combinations:\\\\n\\\";\\n\";","  my @labels=([\"het\",\"hom\"],[\"del\",\"ins\"],[\"multi\"],[\"lowQual\"],[\"segDel\",\"segDup\"],[\"lowCov\",\"highCov\",\"pathogenic\"]);","  my $numbers={\"het\"=>1,\"hom\"=>2,\"del\"=>4,\"ins\"=>8,\"multi\"=>16,\"lowQual\"=>32,\"segDel\"=>64,\"segDup\"=>128,\"lowCov\"=>256,\"highCov\"=>512,\"pathogenic\"=>1024};","  my $outputs={0=>\"\"};","  for(my $i=0;$i<scalar(@labels);$i++){","    my $label=$labels[$i];","    my @keys=keys(%{$outputs});","    foreach my $key(@keys){","      my $output=$outputs->{$key};","      for(my $k=0;$k<scalar(@{$label});$k++){","        my $score=$key;","        my $line=$output;","        my $l=$label->[$k];","        my $n=$numbers->{$l};","        if($line eq \"\"){$line=\"$l($n)\";}","        else{$line.=\"+$l($n)\";}","        $score+=$n;","        $outputs->{$score}=$line;","      }","    }","    if($i==0){delete($outputs->{0});}","  }","  my @keys=sort{$a<=>$b}keys(%{$outputs});","  foreach my $key(@keys){","    my $val=$outputs->{$key};","    for(my $i=length($key);$i<4;$i++){$key=\" $key\";}","    print \"\\tprint \\\"$key = $val\\\\n\\\";\\n\";","  }","}","############################## printTable ##############################","sub printTable{","\tmy @out=@_;","\tmy $return_type=$out[0];","\tif(lc($return_type) eq \"print\"){$return_type=0;shift(@out);}","\telsif(lc($return_type) eq \"array\"){$return_type=1;shift(@out);}","\telsif(lc($return_type) eq \"stderr\"){$return_type=2;shift(@out);}","\telse{$return_type= 2;}","\tprintTableSub($return_type,\"\",@out);","}","sub printTableSub{","\tmy @out=@_;","\tmy $return_type=shift(@out);","\tmy $string=shift(@out);","\tmy @output=();","\tfor(@out){","\t\tif(ref( $_ ) eq \"ARRAY\"){","\t\t\tmy @array=@{$_};","\t\t\tmy $size=scalar(@array);","\t\t\tif($size==0){","\t\t\t\tif($return_type==0){print $string.\"[]\\n\";}","\t\t\t\telsif($return_type==1){push(@output,$string.\"[]\");}","\t\t\t\telsif($return_type==2){print STDERR $string.\"[]\\n\";}","\t\t\t}else{","\t\t\t\tfor(my $i=0;$i<$size;$i++){push(@output,printTableSub($return_type,$string.\"[$i]=>\\t\",$array[$i]));}","\t\t\t}","\t\t} elsif(ref($_)eq\"HASH\"){","\t\t\tmy %hash=%{$_};","\t\t\tmy @keys=sort{$a cmp $b}keys(%hash);","\t\t\tmy $size=scalar(@keys);","\t\t\tif($size==0){","\t\t\t\tif($return_type==0){print $string.\"{}\\n\";}","\t\t\t\telsif($return_type==1){push( @output,$string.\"{}\");}","\t\t\t\telsif($return_type==2){print STDERR $string.\"{}\\n\";}","\t\t\t}else{","\t\t\t\tforeach my $key(@keys){push(@output,printTableSub($return_type,$string.\"{$key}=>\\t\",$hash{$key}));}","\t\t\t}","\t\t}elsif($return_type==0){print \"$string\\\"$_\\\"\\n\";}","\t\telsif($return_type==1){push( @output,\"$string\\\"$_\\\"\");}","\t\telsif($return_type==2){print STDERR \"$string\\\"$_\\\"\\n\";}","\t}","\treturn wantarray?@output:$output[0];","}","############################## readText ##############################","sub readText{","\tmy $file=shift();","\tmy $text=\"\";","\topen(IN,$file);","\twhile(<IN>){s/\\r//g;$text.=$_;}","\tclose(IN);","\treturn $text;","}","############################## sortSplitFile ##############################","sub sortSplitFile{","\tmy $hash=shift();","\tmy $chr=shift();","\tmy $name=shift();","\tif(!exists($hash->{$chr})){return;}","\tif(!exists($hash->{$chr}->{$name})){return;}","\tmy $tmpfile=$hash->{$chr}->{$name};","\tmy ($fh,$tmpfile2)=tempfile(DIR=>$tmpDir,TEMPLATE=>\"$name.$chr.sort.XXXXXX\",SUFFIX=>\".txt\");","\tclose($fh);","\tif(!defined($opt_q)){print STDERR \"#Sorting $chr $name file: $tmpfile2\\n\";}","\tsystem(\"sort -k1,1 -k2,2n -k3,3 -k4,4 $tmpfile>$tmpfile2\");","\tunlink($tmpfile);","\t$hash->{$chr}->{$name}=$tmpfile2;","}","############################## sortSubs ##############################","sub sortSubs{","\tmy $path=\"$program_directory/$program_name\";","\tmy $reader=openFile($path);","\tmy @headers=();","\tmy $name;","\tmy $blocks={};","\tmy $block=[];","\tmy $date=getDate(\"/\");","\tmy @orders=();","\twhile(<$reader>){","\t\tchomp;s/\\r//g;","\t\tif(/^#{30}\\s*(\\S+)\\s*#{30}$/){","\t\t\t$name=$1;","\t\t\tif($name!~/^[A-Z]+$/){push(@{$block},$_);last;}","\t\t}elsif(/^my \\$program_version=\\\"\\S+\\\";/){$_=\"my \\$program_version=\\\"$date\\\";\";}","\t\tpush(@headers,$_);","\t}","\twhile(<$reader>){","\t\tchomp;s/\\r//g;","\t\tif(/^#{30}\\s*(\\S+)\\s*#{30}$/){","\t\t\t$blocks->{$name}=$block;","\t\t\tpush(@orders,$name);","\t\t\t$name=$1;","\t\t\t$block=[];","\t\t}","\t\tpush(@{$block},$_);","\t}","\tclose($reader);","\tif(defined($name)){$blocks->{$name}=$block;push(@orders,$name);}","\tmy ($writer,$file)=tempfile(DIR=>\"/tmp\",SUFFIX=>\".pl\");","\tforeach my $line(@headers){print $writer \"$line\\n\";}","\tforeach my $key(sort{$a cmp $b}@orders){foreach my $line(@{$blocks->{$key}}){print $writer \"$line\\n\";}}","\tclose($writer);","\treturn system(\"mv $file $path\");","}","############################## test ##############################","sub test{","  mkdirs(\"test\");","  createFile(","    \"test/input1.avinput\",","    \"chr1\t10440\t10440\tC\t-\thom\t24.08\t3\tchr1\t10439\trs112766696\tAC\tA\t24.08\tPASS\tAC=2;AF=0.077;AN=26;BaseQRankSum=-4.310e-01;ClippingRankSum=0.00;DB;DP=72;ExcessHet=0.1703;FS=0.000;InbreedingCoeff=0.0754;MLEAC=2;MLEAF=0.077;MQ=15.37;MQRankSum=-9.670e-01;QD=8.03;ReadPosRankSum=0.967;SOR=0.223\tGT:AD:DP:FT:GQ:PL\t1/1:1,2:3:LowDP:4:64,4,0\",","    \"chr1\t15903\t15903\t-\tC\thom\t4945.94\t3\tchr1\t15903\trs557514207\tG\tGC\t4945.94\tPASS\tAC=40;AF=0.870;AN=46;BaseQRankSum=-7.920e-01;ClippingRankSum=0.00;DB;DP=259;ExcessHet=0.0087;FS=24.539;InbreedingCoeff=0.6275;MLEAC=42;MLEAF=0.913;MQ=7.50;MQRankSum=0.00;QD=34.24;ReadPosRankSum=0.674;SOR=3.585\tGT:AD:DP:FT:GQ:PL\t1/1:0,3:3:LowDP:9:107,9,0\",","    \"chr1\t20317\t20317\tA\t-\thet\t3958.34\t38\tchr1\t20316\t.\tGA\tG\t3958.34\tPASS\tAC=16;AF=0.348;AN=46;BaseQRankSum=-1.090e-01;ClippingRankSum=0.00;DP=984;ExcessHet=20.9140;FS=0.000;InbreedingCoeff=-0.5274;MLEAC=16;MLEAF=0.348;MQ=7.48;MQRankSum=-9.310e-01;QD=5.54;ReadPosRankSum=-4.720e-01;SOR=0.703\tGT:AD:DP:GQ:PL\t0/1:23,15:38:99:320,0,587\",","    \"chr1\t81447\t81447\tA\tG\thet\t492.85\t41\tchr1\t81447\t.\tA\tG\t492.85\tPASS\tAC=1;AF=0.022;AN=46;BaseQRankSum=1.42;ClippingRankSum=0.00;DP=810;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=-0.0223;MLEAC=1;MLEAF=0.022;MQ=44.01;MQRankSum=-1.032e+00;QD=12.02;ReadPosRankSum=0.450;SOR=0.616\tGT:AD:DP:FT:GQ:PL\t0/1:21,20:41:PASS:99:530,0,571\",","    \"chr1\t82136\t82137\tAA\t-\thet\t13691.92\t22\tchr1\t82133\t.\tCAAAA\tCAA\t13691.92\tPASS\tAC=11,27,6;AF=0.239,0.587,0.130;AN=46;BaseQRankSum=1.70;ClippingRankSum=0.00;DP=635;ExcessHet=3.1079;FS=1.124;InbreedingCoeff=-0.0403;MLEAC=11,25,6;MLEAF=0.239,0.543,0.130;MQ=10.37;MQRankSum=0.260;QD=26.69;ReadPosRankSum=0.805;SOR=0.878\tGT:AD:DP:FT:GQ:PL\t2/3:0,0,10,12:22:PASS:99:766,694,676,325,322,261,268,283,0,255\",","    \"chr1\t95011\t95011\t-\tG\thet\t1320.14\t40\tchr1\t95011\t.\tT\tTG\t1320.14\tPASS\tAC=7,2;AF=0.152,0.043;AN=46;BaseQRankSum=1.10;ClippingRankSum=0.00;DP=777;ExcessHet=7.2151;FS=1.793;InbreedingCoeff=-0.2425;MLEAC=6,2;MLEAF=0.130,0.043;MQ=19.55;MQRankSum=-4.795e+00;QD=4.26;ReadPosRankSum=0.999;SOR=0.866\tGT:AD:DP:GQ:PGT:PID:PL\t0/1:34,6,0:40:99:0|1:94986_C_T:150,0,2303,252,2321,2573\",","    \"chr1\t104160\t104160\t-\tACAC\thet\t11577.69\t19\tchr1\t104160\trs372078516\tA\tAACAC\t11577.69\tPASS\tAC=26,16;AF=0.565,0.348;AN=46;BaseQRankSum=-1.490e-01;ClippingRankSum=0.00;DB;DP=584;ExcessHet=3.1125;FS=50.214;InbreedingCoeff=0.1776;MLEAC=24,13;MLEAF=0.522,0.283;MQ=7.79;MQRankSum=-1.549e+00;QD=29.00;ReadPosRankSum=0.942;SOR=5.670\tGT:AD:DP:FT:GQ:PL\t1/2:3,8,7:19:PASS:99:581,166,257,225,0,358\",","    \"chr1\t790136\t790136\tA\tG\thet\t5687.30\t10\tchr1\t790136\trs6696240\tA\tG\t5687.30\tPASS\tAC=5,7,2,5;AF=0.109,0.152,0.043,0.109;AN=46;BaseQRankSum=0.269;ClippingRankSum=0.00;DB;DP=590;ExcessHet=51.2979;FS=7.965;InbreedingCoeff=-0.7242;MLEAC=5,7,2,5;MLEAF=0.109,0.152,0.043,0.109;MQ=13.39;MQRankSum=0.00;QD=20.10;ReadPosRankSum=0.693;SOR=0.799\tGT:AD:DP:FT:GQ:PGT:PID:PL\t0/2:5,0,5,0,0:10:PASS:99:.:.:307,262,605,0,327,310,262,605,327,605,262,605,327,605,605\",","    \"chr1\t791101\t791101\tT\tG\thom\t22194.47\t23\tchr1\t791101\trs3131980\tT\tG\t22194.47\tPASS\tAC=41,5;AF=0.891,0.109;AN=46;BaseQRankSum=1.02;ClippingRankSum=0.00;DB;DP=679;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.0000;MLEAC=41,5;MLEAF=0.891,0.109;MQ=12.26;MQRankSum=0.00;QD=34.90;ReadPosRankSum=2.02;SOR=0.526\tGT:AD:DP:GQ:PGT:PID:PL\t1/1:0,23,0:23:69:.:.:741,69,0,741,69,741\",","    \"chr1\t822428\t822498\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t0\thom\t18262.34\t25\tchr1\t822428\t.\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t0\t18262.34\tPASS\tAC=1,37;AF=0.022,0.804;AN=46;BaseQRankSum=0.00;ClippingRankSum=0.00;DP=838;ExcessHet=6.1884;FS=2.276;InbreedingCoeff=-0.2105;MLEAC=1,37;MLEAF=0.022,0.804;MQ=8.79;MQRankSum=0.00;QD=29.74;ReadPosRankSum=-7.330e-01;SOR=0.870\tGT:AD:DP:GQ:PL\t2/2:0,0,25:25:78:1022,1022,1022,78,78,0\",","    \"chr1\t840411\t840411\tA\t-\thom\t14651.44\t22\tchr1\t840409\trs755461528\tTAA\tTA\t14651.44\tPASS\tAC=9,8,29;AF=0.196,0.174,0.630;AN=46;BaseQRankSum=-4.920e-01;ClippingRankSum=0.00;DB;DP=775;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.0007;MLEAC=8,7,29;MLEAF=0.174,0.152,0.630;MQ=11.74;MQRankSum=-3.780e-01;QD=21.33;ReadPosRankSum=0.406;SOR=0.722\tGT:AD:DP:GQ:PL\t3/3:0,0,0,22:22:65:463,463,463,463,463,463,65,65,65,0\",","    \"chr1\t984611\t984611\t-\tT\thom\t19540.64\t12\tchr1\t984611\t.\tCTTAT\tCTTTAT\t19540.64\tPASS\tAC=3,32,1,2,3,2;AF=0.065,0.696,0.022,0.043,0.065,0.043;AN=46;BaseQRankSum=1.37;ClippingRankSum=0.00;DP=526;ExcessHet=3.3099;FS=1.943;InbreedingCoeff=-0.0688;MLEAC=3,32,1,2,3,2;MLEAF=0.065,0.696,0.022,0.043,0.065,0.043;MQ=12.55;MQRankSum=0.00;QD=26.25;ReadPosRankSum=0.199;SOR=0.647\tGT:AD:DP:FT:GQ:PGT:PID:PL\t2/2:0,0,12,0,0,0,0:12:PASS:39:1|1:984611_C_CT:584,585,585,39,39,0,585,585,39,585,585,585,39,585,585,585,585,39,585,585,585,585,585,39,585,585,585,585\",","    \"chr1\t1010440\t1010440\tC\t-\thom\t24.08\t3\tchr1\t1010439\trs112766696\tAC\tA\t24.08\t10\tAC=2;AF=0.077;AN=26;BaseQRankSum=-4.310e-01;ClippingRankSum=0.00;DB;DP=72;ExcessHet=0.1703;FS=0.000;InbreedingCoeff=0.0754;MLEAC=2;MLEAF=0.077;MQ=15.37;MQRankSum=-9.670e-01;QD=8.03;ReadPosRankSum=0.967;SOR=0.223\tGT:AD:DP:FT:GQ:PL\t1/1:1,2:3:LowDP:4:64,4,0\",","    \"chr1\t1015903\t1015903\t-\tC\thom\t4945.94\t3\tchr1\t1015903\trs557514207\tG\tGC\t4945.94\t11\tAC=40;AF=0.870;AN=46;BaseQRankSum=-7.920e-01;ClippingRankSum=0.00;DB;DP=259;ExcessHet=0.0087;FS=24.539;InbreedingCoeff=0.6275;MLEAC=42;MLEAF=0.913;MQ=7.50;MQRankSum=0.00;QD=34.24;ReadPosRankSum=0.674;SOR=3.585\tGT:AD:DP:FT:GQ:PL\t1/1:0,3:3:LowDP:9:107,9,0\",","    \"chr1\t1020317\t1020317\tA\t-\thet\t3958.34\t38\tchr1\t1020316\t.\tGA\tG\t3958.34\t12\tAC=16;AF=0.348;AN=46;BaseQRankSum=-1.090e-01;ClippingRankSum=0.00;DP=984;ExcessHet=20.9140;FS=0.000;InbreedingCoeff=-0.5274;MLEAC=16;MLEAF=0.348;MQ=7.48;MQRankSum=-9.310e-01;QD=5.54;ReadPosRankSum=-4.720e-01;SOR=0.703\tGT:AD:DP:GQ:PL\t0/1:23,15:38:99:320,0,587\",","    \"chr1\t1081447\t1081447\tA\tG\thet\t492.85\t41\tchr1\t1081447\t.\tA\tG\t492.85\t13\tAC=1;AF=0.022;AN=46;BaseQRankSum=1.42;ClippingRankSum=0.00;DP=810;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=-0.0223;MLEAC=1;MLEAF=0.022;MQ=44.01;MQRankSum=-1.032e+00;QD=12.02;ReadPosRankSum=0.450;SOR=0.616\tGT:AD:DP:FT:GQ:PL\t0/1:21,20:41:PASS:99:530,0,571\",","    \"chr1\t1082136\t1082137\tAA\t-\thet\t13691.92\t22\tchr1\t1082133\t.\tCAAAA\tCAA\t13691.92\t14\tAC=11,27,6;AF=0.239,0.587,0.130;AN=46;BaseQRankSum=1.70;ClippingRankSum=0.00;DP=635;ExcessHet=3.1079;FS=1.124;InbreedingCoeff=-0.0403;MLEAC=11,25,6;MLEAF=0.239,0.543,0.130;MQ=10.37;MQRankSum=0.260;QD=26.69;ReadPosRankSum=0.805;SOR=0.878\tGT:AD:DP:FT:GQ:PL\t2/3:0,0,10,12:22:PASS:99:766,694,676,325,322,261,268,283,0,255\",","    \"chr1\t1095011\t1095011\t-\tG\thet\t1320.14\t40\tchr1\t1095011\t.\tT\tTG\t1320.14\t15\tAC=7,2;AF=0.152,0.043;AN=46;BaseQRankSum=1.10;ClippingRankSum=0.00;DP=777;ExcessHet=7.2151;FS=1.793;InbreedingCoeff=-0.2425;MLEAC=6,2;MLEAF=0.130,0.043;MQ=19.55;MQRankSum=-4.795e+00;QD=4.26;ReadPosRankSum=0.999;SOR=0.866\tGT:AD:DP:GQ:PGT:PID:PL\t0/1:34,6,0:40:99:0|1:94986_C_T:150,0,2303,252,2321,2573\",","    \"chr1\t10104160\t10104160\t-\tACAC\thet\t11577.69\t19\tchr1\t10104160\trs372078516\tA\tAACAC\t11577.69\t16\tAC=26,16;AF=0.565,0.348;AN=46;BaseQRankSum=-1.490e-01;ClippingRankSum=0.00;DB;DP=584;ExcessHet=3.1125;FS=50.214;InbreedingCoeff=0.1776;MLEAC=24,13;MLEAF=0.522,0.283;MQ=7.79;MQRankSum=-1.549e+00;QD=29.00;ReadPosRankSum=0.942;SOR=5.670\tGT:AD:DP:FT:GQ:PL\t1/2:3,8,7:19:PASS:99:581,166,257,225,0,358\",","    \"chr1\t10790136\t10790136\tA\tG\thet\t5687.30\t10\tchr1\t10790136\trs6696240\tA\tG\t5687.30\t17\tAC=5,7,2,5;AF=0.109,0.152,0.043,0.109;AN=46;BaseQRankSum=0.269;ClippingRankSum=0.00;DB;DP=590;ExcessHet=51.2979;FS=7.965;InbreedingCoeff=-0.7242;MLEAC=5,7,2,5;MLEAF=0.109,0.152,0.043,0.109;MQ=13.39;MQRankSum=0.00;QD=20.10;ReadPosRankSum=0.693;SOR=0.799\tGT:AD:DP:FT:GQ:PGT:PID:PL\t0/2:5,0,5,0,0:10:PASS:99:.:.:307,262,605,0,327,310,262,605,327,605,262,605,327,605,605\",","    \"chr1\t10791101\t10791101\tT\tG\thom\t22194.47\t23\tchr1\t10791101\trs3131980\tT\tG\t22194.47\t18\tAC=41,5;AF=0.891,0.109;AN=46;BaseQRankSum=1.02;ClippingRankSum=0.00;DB;DP=679;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.0000;MLEAC=41,5;MLEAF=0.891,0.109;MQ=12.26;MQRankSum=0.00;QD=34.90;ReadPosRankSum=2.02;SOR=0.526\tGT:AD:DP:GQ:PGT:PID:PL\t1/1:0,23,0:23:69:.:.:741,69,0,741,69,741\",","    \"chr1\t10822428\t10822498\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t0\thom\t18262.34\t25\tchr1\t10822428\t.\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t0\t18262.34\t19\tAC=1,37;AF=0.022,0.804;AN=46;BaseQRankSum=0.00;ClippingRankSum=0.00;DP=838;ExcessHet=6.1884;FS=2.276;InbreedingCoeff=-0.2105;MLEAC=1,37;MLEAF=0.022,0.804;MQ=8.79;MQRankSum=0.00;QD=29.74;ReadPosRankSum=-7.330e-01;SOR=0.870\tGT:AD:DP:GQ:PL\t2/2:0,0,25:25:78:1022,1022,1022,78,78,0\",","    \"chr1\t10840411\t10840411\tA\t-\thom\t14651.44\t22\tchr1\t10840409\trs755461528\tTAA\tTA\t14651.44\t20\tAC=9,8,29;AF=0.196,0.174,0.630;AN=46;BaseQRankSum=-4.920e-01;ClippingRankSum=0.00;DB;DP=775;ExcessHet=3.0103;FS=0.000;InbreedingCoeff=0.0007;MLEAC=8,7,29;MLEAF=0.174,0.152,0.630;MQ=11.74;MQRankSum=-3.780e-01;QD=21.33;ReadPosRankSum=0.406;SOR=0.722\tGT:AD:DP:GQ:PL\t3/3:0,0,0,22:22:65:463,463,463,463,463,463,65,65,65,0\",","    \"chr1\t10984611\t10984611\t-\tT\thom\t19540.64\t12\tchr1\t10984611\t.\tCTTAT\tCTTTAT\t19540.64\t21\tAC=3,32,1,2,3,2;AF=0.065,0.696,0.022,0.043,0.065,0.043;AN=46;BaseQRankSum=1.37;ClippingRankSum=0.00;DP=526;ExcessHet=3.3099;FS=1.943;InbreedingCoeff=-0.0688;MLEAC=3,32,1,2,3,2;MLEAF=0.065,0.696,0.022,0.043,0.065,0.043;MQ=12.55;MQRankSum=0.00;QD=26.25;ReadPosRankSum=0.199;SOR=0.647\tGT:AD:DP:FT:GQ:PGT:PID:PL\t2/2:0,0,12,0,0,0,0:12:PASS:39:1|1:984611_C_CT:584,585,585,39,39,0,585,585,39,585,585,585,39,585,585,585,585,39,585,585,585,585,585,39,585,585,585,585\",","  );","  testCommand(","    \"perl $program_directory/vcftable.pl -q test/input1.avinput\",","    \"#chromosome\tposition\tref\talt\tinput1\",","    \"chr1\t10440\tC\t.\t6\",","    \"chr1\t15903\t.\tC\t10\",  ","    \"chr1\t20317\tA\t.\t5\",","    \"chr1\t81447\tA\tG\t1\",","    \"chr1\t82136\tAA\t.\t21\",","    \"chr1\t95011\t.\tG\t9\",","    \"chr1\t104160\t.\tACAC\t25\",","    \"chr1\t790136\tA\tG\t17\",","    \"chr1\t791101\tT\tG\t2\",","    \"chr1\t822428\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t.......................................................................\t18\",","    \"chr1\t840411\tA\t.\t22\",","    \"chr1\t984611\t.\tT\t26\",","    \"chr1\t1010440\tC\t.\t38\",","    \"chr1\t1015903\t.\tC\t42\",","    \"chr1\t1020317\tA\t.\t37\",","    \"chr1\t1081447\tA\tG\t33\",","    \"chr1\t1082136\tAA\t.\t53\",","    \"chr1\t1095011\t.\tG\t41\",","    \"chr1\t10104160\t.\tACAC\t57\",","    \"chr1\t10790136\tA\tG\t49\",","    \"chr1\t10791101\tT\tG\t34\",","    \"chr1\t10822428\tCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGCCTGGCCAGCAGATCCACCCTGTCTATACTACCTGA\t.......................................................................\t50\",","    \"chr1\t10840411\tA\t.\t54\",","    \"chr1\t10984611\t.\tT\t58\",","  );","  unlink(\"test/input1.avinput\");","  createFile(","    \"test/input1.vcf\",","    \"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA18939\",","    \"1\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",","    \"1\t948921\tvar_803\tT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",","    \"1\t10887560\tvar_452\tAT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",","    \"1\t10948921\tvar_803\tT\tCA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",","    \"1\t20887560\tvar_452\tAT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t1/3:3,9:8.37:-43.31,-8.99,-17.36\",","    \"1\t20948921\tvar_803\tT\tCA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t2/2:0,13:9.01:-64.60,-16.09,-7.08\",","  );","  testCommand(","    \"perl $program_directory/vcftable.pl -q test/input1.vcf\",","    \"#chromosome\tposition\tref\talt\tNA18939\",","    \"chr1\t887560\tA\tC\t1\",","    \"chr1\t948921\tT\tC\t2\",","    \"chr1\t10887560\tAT\tC\t5\",","    \"chr1\t10948921\tT\tCA\t10\",","    \"chr1\t20887560\tAT\tC\t21\",","    \"chr1\t20948921\tT\tCA\t26\",","  );","  unlink(\"test/input1.vcf\");","\t\tcreateFile(\"test/NA18939.vcf\",","\t\t\"1\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",","\t\t\"1\t948921\tvar_803\tT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",","\t\t\"3\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\"","\t\t);","\t\tcreateFile(\"test/NA18940.vcf\",","\t\t\"1\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",","\t\t\"2\t889238\tvar_462\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",","\t\t\"3\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\"","\t\t);","\t\tcreateFile(\"test/NA18941.vcf\",","\t\t\"1\t1263144\tvar_2686\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=156.88\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\",","\t\t\"2\t889238\tvar_462\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",","\t\t\"2\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\"","\t\t);","\t\tcreateFile(\"test/NA18942.vcf\",","\t\t\"3\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",","\t\t\"3\t889238\tvar_462\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",","\t\t\"3\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\"","\t\t);","  testCommand(\"perl $program_directory/vcftable.pl -q test/NA18939.vcf test/NA18940.vcf test/NA18941.vcf test/NA18942.vcf\",\"#chromosome\tposition\tref\talt\tNA18939\tNA18940\tNA18941\tNA18942\",","\t\"chr1\t887560\tA\tC\t1\t1\t0\t0\",","\t\"chr1\t948921\tT\tC\t2\t0\t0\t0\",","\t\"chr1\t1263144\tG\tA\t0\t0\t2\t0\",","\t\"chr2\t889238\tG\tA\t0\t1\t1\t0\",","\t\"chr2\t892745\tG\tA\t0\t0\t1\t0\",","\t\"chr3\t887560\tA\tC\t0\t0\t0\t1\",","\t\"chr3\t889238\tG\tA\t0\t0\t0\t1\",","\t\"chr3\t892745\tG\tA\t1\t1\t0\t1\");"," unlink(\"test/NA18939.vcf\");"," unlink(\"test/NA18940.vcf\");"," unlink(\"test/NA18941.vcf\");"," unlink(\"test/NA18942.vcf\");","\tcreateFile(\"test/NA18943.vcf\",\"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA18943\",\"1\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",\"1\t887560\tvar_453\tG\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",\"1\t889238\tvar_462\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",\"1\t889238\tvar_463\tT\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",\"1\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\",\"1\t892745\tvar_490\tC\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\",\"1\t909073\tvar_590\tC\tT\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=143.24\tGT:COV:GT_CONF:GL\t0/1:5,4:15.22:-20.17,-4.95,-24.72\",\"1\t909073\tvar_591\tA\tT\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=143.24\tGT:COV:GT_CONF:GL\t0/1:5,4:15.22:-20.17,-4.95,-24.72\",\"1\t948921\tvar_803\tT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",\"1\t949654\tvar_804\tC\tG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=141.94\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\",\"1\t949654\tvar_810\tA\tG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=141.94\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\");"," testCommand(\"perl $program_directory/vcftable.pl -q test/NA18943.vcf\",\"#chromosome\tposition\tref\talt\tNA18943\",\"chr1\t887560\tA\tC\t1\",\"chr1\t887560\tG\tC\t1\",\"chr1\t889238\tG\tA\t1\",\"chr1\t889238\tT\tA\t1\",\"chr1\t892745\tC\tA\t1\",\"chr1\t892745\tG\tA\t1\",\"chr1\t909073\tA\tT\t1\",\"chr1\t909073\tC\tT\t1\",\"chr1\t948921\tT\tC\t2\",\"chr1\t949654\tA\tG\t2\",\"chr1\t949654\tC\tG\t2\");","\tcreateFile(\"test/NA18944.vcf\",\"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA18944\",\"1\t887560\tvar_452\tA\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",\"1\t887560\tvar_453\tG\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",\"1\t889238\tvar_462\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",\"1\t889238\tvar_463\tT\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",\"1\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\",\"1\t892745\tvar_490\tC\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\",\"1\t909073\tvar_590\tC\tT\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=143.24\tGT:COV:GT_CONF:GL\t0/1:5,4:15.22:-20.17,-4.95,-24.72\",\"1\t909073\tvar_591\tA\tT\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=143.24\tGT:COV:GT_CONF:GL\t0/1:5,4:15.22:-20.17,-4.95,-24.72\",\"1\t948921\tvar_803\tT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",\"1\t949654\tvar_804\tC\tG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=141.94\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\",\"1\t949654\tvar_810\tA\tG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=141.94\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\");"," testCommand(\"perl $program_directory/vcftable.pl -q test/NA18943.vcf test/NA18944.vcf\",\"#chromosome\tposition\tref\talt\tNA18943\tNA18944\",\"chr1\t887560\tA\tC\t1\t1\",\"chr1\t887560\tG\tC\t1\t1\",\"chr1\t889238\tG\tA\t1\t1\",\"chr1\t889238\tT\tA\t1\t1\",\"chr1\t892745\tC\tA\t1\t1\",\"chr1\t892745\tG\tA\t1\t1\",\"chr1\t909073\tA\tT\t1\t1\",\"chr1\t909073\tC\tT\t1\t1\",\"chr1\t948921\tT\tC\t2\t2\",\"chr1\t949654\tA\tG\t2\t2\",\"chr1\t949654\tC\tG\t2\t2\");","\tcreateFile(\"test/NA18945.vcf\",\"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO\tFORMAT\tNA18945\",\"1\t887560\tvar_453\tT\tCG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=110.65\tGT:COV:GT_CONF:GL\t0/1:3,9:8.37:-43.31,-8.99,-17.36\",\"1\t889238\tvar_463\tT\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=90.09\tGT:COV:GT_CONF:GL\t0/1:2,2:8.86:-11.53,-2.67,-11.53\",\"1\t892745\tvar_489\tG\tA\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=74.92\tGT:COV:GT_CONF:GL\t0/1:6,3:10.45:-15.80,-5.35,-29.49\",\"1\t909073\tvar_590\tC\tT\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=143.24\tGT:COV:GT_CONF:GL\t0/1:5,4:15.22:-20.17,-4.95,-24.72\",\"1\t948921\tvar_803\tT\tC\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=134.03\tGT:COV:GT_CONF:GL\t1/1:0,13:9.01:-64.60,-16.09,-7.08\",\"1\t949654\tvar_804\tC\tG\t.\tPASS\tSVLEN=0;SVTYPE=SNP:SITE_CONF=141.94\tGT:COV:GT_CONF:GL\t1/1:0,1:0.69:-9.34,-3.87,-3.18\");","\ttestCommand(\"perl $program_directory/vcftable.pl -q test/NA18943.vcf test/NA18944.vcf test/NA18945.vcf\",\"#chromosome\tposition\tref\talt\tNA18943\tNA18944\tNA18945\",\"chr1\t887560\tA\tC\t1\t1\t0\",\"chr1\t887560\tG\tC\t1\t1\t0\",\"chr1\t887560\tT\tCG\t0\t0\t9\",\"chr1\t889238\tG\tA\t1\t1\t0\",\"chr1\t889238\tT\tA\t1\t1\t1\",\"chr1\t892745\tC\tA\t1\t1\t0\",\"chr1\t892745\tG\tA\t1\t1\t1\",\"chr1\t909073\tA\tT\t1\t1\t0\",\"chr1\t909073\tC\tT\t1\t1\t1\",\"chr1\t948921\tT\tC\t2\t2\t2\",\"chr1\t949654\tA\tG\t2\t2\t0\",\"chr1\t949654\tC\tG\t2\t2\t2\",);","\tcreateFile(\"test/alphaMissense.tsv\",\"#CHROM  POS     REF     ALT     am_class\",","\t\"chr1\t887560\tA\tC\tlikely_pathogenic\",","\t\"chr1\t949654\tT\tC\tlikely_pathogenic\",","\t\"chr1\t887560\tT\tCG\tlikely_pathogenic\");","\ttestCommand(\"perl $program_directory/vcftable.pl -q -a test/alphaMissense.tsv test/NA18943.vcf test/NA18944.vcf test/NA18945.vcf\",\"#chromosome\tposition\tref\talt\tNA18943\tNA18944\tNA18945\",\"chr1\t887560\tA\tC\t1025\t1025\t0\",\"chr1\t887560\tG\tC\t1\t1\t0\",\"chr1\t887560\tT\tCG\t0\t0\t1033\",\"chr1\t889238\tG\tA\t1\t1\t0\",\"chr1\t889238\tT\tA\t1\t1\t1\",\"chr1\t892745\tC\tA\t1\t1\t0\",\"chr1\t892745\tG\tA\t1\t1\t1\",\"chr1\t909073\tA\tT\t1\t1\t0\",\"chr1\t909073\tC\tT\t1\t1\t1\",\"chr1\t948921\tT\tC\t2\t2\t2\",\"chr1\t949654\tA\tG\t2\t2\t0\",\"chr1\t949654\tC\tG\t2\t2\t2\",);","\tunlink(\"test/NA18943.vcf\");","\tunlink(\"test/NA18944.vcf\");","\tunlink(\"test/NA18945.vcf\");","\tunlink(\"test/alphaMissense.tsv\");","\trmdir(\"test\");","}","############################## testCommand ##############################","sub testCommand{","\tmy @values=@_;","\tmy $command=shift(@values);","\tmy $value2=join(\"\\n\",@values);","\tmy ($writer,$file)=tempfile();","\tclose($writer);","\tif(system(\"$command > $file\")){","\t\tprint STDERR \">$command\\n\";","\t\tprint STDERR \"Command failed...\\n\";","\t\treturn 1;","\t}","\tmy $value1=readText($file);","\tchomp($value1);","  $value1=~s/\\r//g;","\tif($value2 eq\"\"){if($value1 eq\"\"){return 0;}}","\tif($value1 eq $value2){return 0;}","\tprint STDERR \">$command\\n\";","\tprint STDERR \"$value1\\n\";","\tprint STDERR \"$value2\\n\";","}","############################## testSub ##############################","sub testSub{","\tmy $command=shift();","\tmy $value2=shift();","\tmy $value1=eval($command);","\tif(equals($value1,$value2)){return 0;}","  print STDERR \">$command\\n\";","\tprintTable($value1);","\tprintTable($value2);","}"],"https://moirai2.github.io/schema/daemon/script/name":"vcftable.pl"},"https://moirai2.github.io/schema/daemon/sleeptime":"60","https://moirai2.github.io/schema/daemon/userdefined":{"output":"$project/vcftable.txt"}}
